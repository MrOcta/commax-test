name: "openpilot env setup"

env:
  UV_SYSTEM_PYTHON: 1

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        git lfs pull

    # build cache
    - id: date
      shell: bash
      run: echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
      
    - shell: bash
      run: echo "$CACHE_COMMIT_DATE"
      
    - id: scons-cache
      uses: ./.github/workflows/auto-cache
      with:
        path: .ci_cache/scons_cache
        key: scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}

    - name: Cache Installed APT Packages
      if: steps.cache-apt.outputs.cache-hit != 'true'
      shell: bash
      run: |
        # Ensure scripts and directories are executable and accessible
        sudo chmod +x tools/install_ubuntu_dependencies.sh tools/install_python_dependencies.sh
    
        # Install essential dependencies
        ./tools/install_ubuntu_dependencies.sh
        sudo apt-get update && sudo apt-get install -y --no-install-recommends sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot
        sudo apt-get update && sudo apt-get install -y --no-install-recommends apt-utils alien unzip tar curl xz-utils dbus gcc-arm-none-eabi tmux vim libx11-6 wget
    
        # Configure locale and timezone
        sudo sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && sudo locale-gen
        sudo ln -fs /usr/share/zoneinfo/UTC /etc/localtime
        sudo dpkg-reconfigure -f noninteractive tzdata
    
        # Create and configure user
        sudo useradd -m -s /bin/bash -u 1001 batman
        sudo usermod -aG sudo batman
        echo '%sudo ALL=(ALL) NOPASSWD:ALL' | sudo tee -a /etc/sudoers
    
        # Install Intel OpenCL and TBB libraries
        mkdir -p /tmp/opencl-driver-intel && cd /tmp/opencl-driver-intel
        wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz
        wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz
    
        # Extract and configure libraries
        mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel
        tar -zxvf oclcpuexp-2024.17.3.0.09_rel.tar.gz -C /opt/intel/oclcpuexp_2024.17.3.0.09_rel
        tar -zxvf oneapi-tbb-2021.12.0-lin.tgz -C /opt/intel
        sudo ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64
        sudo ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64
    
        # Configure OpenCL ICD
        echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so | sudo tee /etc/OpenCL/vendors/intel_expcpu.icd
        echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 | sudo tee /etc/ld.so.conf.d/libintelopenclexp.conf
        sudo ldconfig
    
        # Final cleanup
        rm -rf /tmp/opencl-driver-intel
    
        # Configure Python environment
        tools/install_python_dependencies.sh
        mkdir -p /home/batman/.venv && cp -r /tmp/.venv/* /home/batman/.venv
        sudo rm -rf /tmp/*
        sudo rm -rf /home/batman/.cache
        
        # Git safe directory setup
        sudo git config --global --add safe.directory /tmp/openpilot
