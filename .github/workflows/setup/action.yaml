name: "openpilot env setup"

inputs:
  is_retried:
    description: "A mock param that asserts that we use the setup-with-retry instead of this action directly"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    # assert that this action is retried using the setup-with-retry
    - shell: bash
      if: ${{ inputs.is_retried == 'false' }}
      run: |
        echo "You should not run this action directly. Use setup-with-retry instead"
        exit 1

    - shell: bash
      name: No retries!
      run: |
        if [ "${{ github.run_attempt }}" -gt 1 ]; then
          echo -e "\033[0;31m##################################################"
          echo -e "\033[0;31m    Retries not allowed! Fix the flaky test!      "
          echo -e "\033[0;31m##################################################\033[0m"
          exit 1
        fi

    # do this after checkout to ensure our custom LFS config is used to pull from GitLab
    - shell: bash
      run: git lfs pull

    - id: normalize-file-permissions
      shell: bash
      name: Normalize file permissions to ensure a consistent docker build cache
      run: |
        find . -type f -executable -not -perm 755 -exec chmod 755 {} \;
        find . -type f -not -executable -not -perm 644 -exec chmod 644 {} \;
    # build cache
    - id: date
      shell: bash
      run: echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
    - shell: bash
      run: echo "$CACHE_COMMIT_DATE"
    - id: scons-cache
      uses: ./.github/workflows/auto-cache
      with:
        path: /tmp/scons_cache
        key: scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}

    - name: Set up APT cache
      run: |
        sudo mkdir -p /path/to/x/cache
        sudo chmod 777 /path/to/x/cache
    - name: Download packages
      run: |
        sudo apt-get update
        sudo apt-get install --download-only $(cat .github/workflows/setup/apt-packages.txt | xargs)
        sudo mv /var/cache/apt/archives/*.deb /path/to/x/cache/
    - name: Install downloaded packages
      run: |
        cd /path/to/x/cache
        sudo dpkg -i *.deb
        sudo apt-get install -f
    - name: Cache packages
      uses: actions/cache@v2
      with:
        path: /path/to/x/cache
        key: ${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-
          ${{ github.sha }}
    - name: Clean up
      run: |
        sudo apt-get clean
        sudo rm -rf /path/to/x/cache/*

    - uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"

    - shell: bash
      run: uv sync --frozen --all-extras
