name: "openpilot env setup"

env:
  UV_SYSTEM_PYTHON: 1

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        git lfs pull

    # build cache
    - id: date
      shell: bash
      run: echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV

    - shell: bash
      run: echo "$CACHE_COMMIT_DATE"

    - id: scons-cache
      uses: ./.github/workflows/auto-cache
      with:
        path: .ci_cache/scons_cache
        key: scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}

    - name: Cache Installed APT Packages
      shell: bash
      run: |
        # Run the entire script with sudo if youâ€™re executing it all at once
        sudo bash <<EOF
              
        # Install necessary dependencies
        apt-get update && \
            apt-get install -y --no-install-recommends \
                sudo tzdata locales ssh pulseaudio xvfb x11-xserver-utils gnome-screenshot && \
            rm -rf /var/lib/apt/lists/*
              
        # Configure locale
        sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
            locale-gen
              
        # Add a new user "batman" with sudo privileges
        useradd -m -s /bin/bash -u 1001 batman && \
            usermod -aG sudo batman && \
            echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
              
        # Install additional packages
        apt-get update && \
            apt-get install -y --no-install-recommends \
                apt-utils alien unzip tar curl xz-utils dbus gcc-arm-none-eabi tmux vim libx11-6 wget && \
            rm -rf /var/lib/apt/lists/*
              
        # Install Intel OpenCL and oneTBB libraries
        mkdir -p /tmp/opencl-driver-intel && cd /tmp/opencl-driver-intel && \
            wget https://github.com/intel/llvm/releases/download/2024-WW14/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
            wget https://github.com/oneapi-src/oneTBB/releases/download/v2021.12.0/oneapi-tbb-2021.12.0-lin.tgz && \
            mkdir -p /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
            cd /opt/intel/oclcpuexp_2024.17.3.0.09_rel && \
            tar -zxvf /tmp/opencl-driver-intel/oclcpuexp-2024.17.3.0.09_rel.tar.gz && \
            mkdir -p /etc/OpenCL/vendors && \
            echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64/libintelocl.so > /etc/OpenCL/vendors/intel_expcpu.icd && \
            cd /opt/intel && \
            tar -zxvf /tmp/opencl-driver-intel/oneapi-tbb-2021.12.0-lin.tgz && \
            ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
            ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
            ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbb.so.12 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
            ln -s /opt/intel/oneapi-tbb-2021.12.0/lib/intel64/gcc4.8/libtbbmalloc.so.2 /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 && \
            mkdir -p /etc/ld.so.conf.d && \
            echo /opt/intel/oclcpuexp_2024.17.3.0.09_rel/x64 > /etc/ld.so.conf.d/libintelopenclexp.conf && \
            ldconfig -f /etc/ld.so.conf.d/libintelopenclexp.conf && \
            rm -rf /tmp/opencl-driver-intel
              
        # Generate dbus UUID
        dbus-uuidgen > /etc/machine-id
              
        # Copy configuration files (assuming `pyproject.toml` and `uv.lock` are available in /tmp/)
        cp /tmp/pyproject.toml /tmp/uv.lock /tmp/
              
        # Run Python dependency installation script
        cd /tmp && \
            /tmp/tools/install_python_dependencies.sh && \
            mkdir -p /home/batman/.venv && \
            cp -r /tmp/.venv/* /home/batman/.venv && \
            rm -rf /tmp/* && \
            rm -rf /home/batman/.cache
              
        EOF
